apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- include "imaginary.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      containers:
      - name: imaginary
        image: {{ template "imaginary.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        {{- if .Values.volumeMount.enabled }}
        - "-mount=/mnt/data"
        {{- end }}
        {{- with .Values.options }}
        {{- if .pathPrefix }}
        - "-path-prefix={{ .pathPrefix }}"
        {{- end }}
        {{- if .cors }}
        - "-cors"
        {{- end }}
        {{- if .gzip }}
        - "-gzip"
        {{- end }}
        {{- if .disableEndpoints }}
        - "-disable-endpoints={{ .disableEndpoints }}"
        {{- end }}
        {{- if .key }}
        - "-key={{ .key }}"
        {{- end }}
        {{- if .httpCacheTTL }}
        - "-http-cache-ttl={{ int .httpCacheTTL }}"
        {{- end }}
        {{- if .httpReadTimeout }}
        - "-http-read-timeout={{ int .httpReadTimeout }}"
        {{- end }}
        {{- if .httpWriteTimeout }}
        - "-http-write-timeout={{ int .httpWriteTimeout }}"
        {{- end }}
        {{- if .enableURLSource }}
        - "-enable-url-source"
        {{- end }}
        {{- if .enablePlaceholder }}
        - "-enable-placeholder"
        {{- end }}
        {{- if .enableAuthForwarding }}
        - "-enable-auth-forwarding"
        {{- end }}
        {{- if .enableURLSignature}}
        - "-enable-url-signature"
        {{- end }}
        {{- if .urlSignatureKey}}
        - "-url-signature-key={{ .urlSignatureKey }}"
        {{- end }}
        {{- if .allowedOrigins }}
        - "-allowed-origins={{ .allowedOrigins }}"
        {{- end }}
        {{- if .maxAllowedSize }}
        - "-max-allowed-size={{ int .maxAllowedSize }}"
        {{- end }}
        {{- if .authorization }}
        - "-authorization={{ .authorization }}"
        {{- end }}
        {{- if .placeholder }}
        - "-placeholder={{ .placeholder }}"
        {{- end }}
        {{- if .concurrency }}
        - "-concurrency={{ int .concurrency }}"
        {{- end }}
        {{- if .burst }}
        - "-burst={{ int .burst }}"
        {{- end }}
        {{- if .mrelease }}
        - "-mrelease={{ int .mrelease }}"
        {{- end }}
        {{- if .cpus }}
        - "-cpus={{ int .cpus }}"
        {{- end }}
        {{- end }}
        env:
        - name: MALLOC_ARENA_MAX
          value: "2"
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.options.pathPrefix | default "" }}/health
            port: 9000
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.options.pathPrefix | default "" }}/health
            port: 9000
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.volumeMount.enabled }}
        volumeMounts:
        - name: images
          mountPath: /mnt/data
        {{- end }}
      {{- if .Values.volumeMount.enabled }}
      volumes:
      - name: images
        {{- if .Values.volumeMount.hostPath }}
        hostPath:
          path: {{ .Values.volumeMount.hostPath }}
        {{- else if .Values.volumeMount.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.volumeMount.existingClaim }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
