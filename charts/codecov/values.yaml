imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

config:
  codecovConfig: |-
    setup:
      admins:
        - service: github
          username: "username"
    services:
      minio:
        verify_ssl: false
        port: 443
  setup:
    codecovHost: codecov.local
    codecovScheme: https
    codecovUrl: https://codecov.local
    codecovApiUrl: https://codecov.local
    timeseries:
      enabled: false
    enterprise_license: "very-long-license-key"
    http:
      cookie_secret: "secrets"
  site:
    comment:
      layout: "reach,diff,flags,tree"
  github:
    client_id: "Iv1.xxx"
    client_secret: "secret"
    global_upload_token: "upload-token"
    webhook_secret: "secret"
    integration:
      id: 1
      pem: /home/codecov/github-app-private.key
  services:
    minio:
      host: "ap-south-1.linodeobjects.com"
      bucket: "codecov"
      region: "ap-south-1"
      accessKeyId: "access-key"
      secretAccessKey: "secret-key"
    postgres:
      username: "codecov"
      password: "secret"
      database: "codecov"
      host: "localhost"
      port: 5432
secretFiles:
  github-app-private.key: |-
    -----BEGIN RSA PRIVATE KEY-----
    your-key
    -----END RSA PRIVATE KEY-----

extraEnvs: []

volumes: []

volumeMounts: []

api:
  replicaCount: 1

  image:
    repository: codecov/enterprise-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext:
    enabled: true
    fsGroup: 101

  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 100
    runAsGroup: 101

  service:
    type: ClusterIP
    port: 80

  containerPort: 8000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: [ ]

worker:
  replicaCount: 1

  image:
    repository: codecov/enterprise-worker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  args:
  - worker

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext:
    enabled: true
    fsGroup: 101

  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 100
    runAsGroup: 101

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: [ ]

gateway:
  replicaCount: 1

  image:
    repository: codecov/enterprise-gateway
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  containerPort: 8080

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: [ ]

frontend:
  replicaCount: 1

  image:
    repository: codecov/enterprise-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  containerPort: 8080


  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: [ ]

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  ingressClassName: nginx
  annotations: {}
  hosts:
    - host: codecov.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
#  - secretName: codecov-tls
#    hosts:
#      - codecov.local

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    password: "REDIS_PASSWORD"
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 0

postgresql:
  enabled: false
  architecture: standalone
  image:
    tag: 14.5.0-debian-11-r29
  postgresPassword: "testpassword"
  service:
    port: 5432
  auth:
    postgresPassword: "testpassword"
    database: "codecov"
    username: codecov
    password: "testpassword"
  primary:
    persistence:
      enabled: false

timescaledb:
  enabled: true
  fullnameOverride: "codecov-timescaledb"
  replicaCount: 1
  image:
    pullPolicy: IfNotPresent
  secrets:
    # This map should contain environment variables that influence Patroni,
    # for example PATRONI_SUPERUSER_PASSWORD or PATRONI_REPLICATION_PASSWORD
    # https://patroni.readthedocs.io/en/latest/ENVIRONMENT.html#postgresql
    credentials:
      PATRONI_SUPERUSER_PASSWORD: "testpassword"
      PATRONI_REPLICATION_PASSWORD: "testpassword"
      PATRONI_admin_PASSWORD: "testpassword"
  # disable ssl as codecov does not support it
  persistentVolumes:
    data:
      enabled: false
    wal:
      enabled: false

minio:
  enabled: false
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  persistence:
    enabled: false
