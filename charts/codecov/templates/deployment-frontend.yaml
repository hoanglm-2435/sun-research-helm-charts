apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-frontend
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      annotations:
        {{- include "codecov.checksums.appConfig" . | nindent 8 }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: {{ include "codecov.serviceAccountName" . }}
      {{- include "codecov.imagePullSecrets" . | nindent 6 }}
      containers:
      - name: codecov-frontend
        image: {{ template "codecov.images.frontend" . }}
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        env:
          - name: CODECOV_BASE_HOST
            value: {{ include "codecov.config.host" . }}
          - name: CODECOV_API_HOST
            value: {{ include "codecov.config.apiHost" . }}
          - name: CODECOV_IA_HOST
            value: {{ include "codecov.config.host" . }}
          - name: CODECOV_SCHEME
            value: {{ include "codecov.config.scheme" . }}
          {{- with .Values.extraEnvs }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        envFrom:
          {{- include "codecov.env" . | nindent 8 }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /frontend_health
            port: http
        readinessProbe:
          httpGet:
            path: /frontend_health
            port: http
        volumeMounts:
          {{- include "codecov.volumeMounts" . | nindent 8 }}
        {{- if .Values.frontend.containerSecurityContext.enabled }}
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.frontend.containerSecurityContext "context" $) | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.frontend.resources | nindent 12 }}
      volumes:
      {{- include "codecov.volumes" . | nindent 6 }}
      {{- if .Values.frontend.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.frontend.podAffinityPreset "component" "frontend" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.frontend.podAntiAffinityPreset "component" "frontend" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" .Values.frontend.nodeAffinityPreset | nindent 10 }}
      {{- end }}
      {{- if .Values.frontend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.frontend.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
