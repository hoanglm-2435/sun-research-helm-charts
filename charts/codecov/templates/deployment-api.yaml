apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-api
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      annotations:
        {{- include "codecov.checksums.appConfig" . | nindent 8 }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      serviceAccountName: {{ include "codecov.serviceAccountName" . }}
      {{- include "codecov.imagePullSecrets" . | nindent 6 }}
      containers:
      - name: codecov-api
        image: {{ template "codecov.images.api" . }}
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        env:
        {{- with .Values.extraEnvs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        envFrom:
          {{- include "codecov.env" . | nindent 8 }}
        volumeMounts:
        - name: codecov-config
          mountPath: "/config"
        {{- include "codecov.volumeMounts" . | nindent 8 }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        {{- if .Values.api.containerSecurityContext.enabled }}
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.api.containerSecurityContext "context" $) | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
      volumes:
      - name: codecov-config
        configMap:
          name: {{ template "common.names.fullname" . }}
      {{- include "codecov.volumes" . | nindent 6 }}
      {{- if .Values.api.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.api.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.api.podAffinityPreset "component" "api" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.api.podAntiAffinityPreset "component" "api" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" .Values.api.nodeAffinityPreset | nindent 10 }}
      {{- end }}
      {{- if .Values.api.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.api.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.api.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.api.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.api.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.api.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
