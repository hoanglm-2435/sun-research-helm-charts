{{- if .Values.ingress.enabled -}}
{{- $fullName := include "common.names.fullname" . -}}
{{- $svcName := printf "%s-gateway" $fullName -}}
apiVersion: {{ template "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    {{- if and .Values.ingress.ingressClassName (eq "false" (include "common.ingress.supportsIngressClassname" .)) }}
    kubernetes.io/ingress.class: {{ .Values.ingress.ingressClassName | quote }}
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.ingress.ingressClassName (include "common.ingress.supportsIngressClassname" .) }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.hostname | quote }}
    http:
      paths:
      - path: {{ .Values.ingress.path | default "/" }}
        {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
        pathType: {{ .Values.ingress.pathType }}
        {{- end }}
        backend: {{- include "common.ingress.backend" (dict "serviceName" $svcName "servicePort" "http" "context" $) | nindent 10 }}
  {{- range .Values.ingress.extraHosts }}
  - host: {{ .name | quote }}
    http:
      paths:
      - path: {{ default "/" .path }}
        {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
        pathType: {{ default "ImplementationSpecific" .pathType }}
        {{- end }}
        backend: {{- include "common.ingress.backend" (dict "serviceName" $svcName "servicePort" "http" "context" $) | nindent 10 }}
  {{- end }}
  tls:
  {{- if and .Values.ingress.tls }}
  - hosts:
    - {{ .Values.ingress.hostname | quote }}
    secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
  {{- end }}
  {{- if .Values.ingress.extraTls }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 2 }}
  {{- end }}
{{- end }}
