apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-haproxy
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  type: {{ .Values.haproxy.service.type }}
  {{- if .Values.haproxy.service.clusterIP }}
  clusterIP: {{ .Values.haproxy.service.clusterIP }}
  {{- end }}
  {{- if (or (eq .Values.haproxy.service.type "LoadBalancer") (eq .Values.haproxy.service.type "NodePort")) }}
  externalTrafficPolicy: {{ .Values.haproxy.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{ if eq .Values.haproxy.service.type "LoadBalancer" }}
  loadBalancerSourceRanges: {{ .Values.haproxy.service.loadBalancerSourceRanges }}
  {{ end }}
  {{- if (and (eq .Values.haproxy.service.type "LoadBalancer") (not (empty .Values.haproxy.service.loadBalancerIP))) }}
  loadBalancerIP: {{ .Values.haproxy.service.loadBalancerIP }}
  {{- end }}
  ports:
  - port: {{ .Values.haproxy.service.port }}
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: haproxy
